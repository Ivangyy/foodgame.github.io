function calculateMenu(r){var i=r.ingredients,e=filterRecipes(r.recipes,r.ingredients),t=r.chefs,n=r.mode,a=t.length,o=0,l=new Array;for(var s in t){if("all"==n){var c=Math.floor(100*(Math.floor(s)+1)/a);c>o&&(o=c,postMessage({progress:{value:c,display:Math.floor(s)+1+" / "+a}}))}var u=new Array;for(var f in e){var d=getQualityInfo(e[f],t[s]);if(0!=d.qualityVal){var h=1;r.recipesMulitple&&(h=e[f].total);var v=getChefSkillAddition(e[f],t[s],i),g=0;if(r.hasRecipesAddition&&(g+=Math.floor(e[f].addition)),r.hasChefsAddition&&(g+=Math.floor(t[s].addition)),r.hasIngredientsAddition){var p=getIngredientsAddition(e[f],i,r.ingredientsAdditionCumulative);g+=p}var m=new Object;m.data=e[f],m.qualityVal=d.qualityVal,m.qualityDisp=d.qualityDisp,m.qualityAddition=d.qualityAddition,m.qualityAdditionDisp=d.qualityAddition||"",m.skillAddition=v,m.skillAdditionDisp=v||"",m.otherAddition=g,m.otherAdditionDisp=g||"",m.quantity=h,m.totalPrice=e[f].price*h,m.realTotalPrice=Math.ceil(e[f].price*(1+d.qualityAddition+v))*h,m.bonusScore=Math.ceil(e[f].price*g)*h,m.totalScore=m.realTotalPrice+m.bonusScore,u.push(m)}}u.sort(function(r,i){return i.totalScore-r.totalScore});var A=9;"all"==n&&(A=r.limit);var M=Math.min(A,u.length);u=u.slice(0,M);var y=new Object;y.chef=t[s],y.recipes=u,"optimal"==n&&(y.min3sum=getMin3Sum(u),y.max3sum=getMax3Sum(u)),l.push(y)}if("optimal"==n){if(l.length>3){l.sort(function(r,i){return i.min3sum-r.min3sum});var b=getMax3Limit(l);for(var S in l)l[S].max3sum<=b&&l.splice(S,1);l.sort(function(r,i){return i.max3sum-r.max3sum})}var w=new Array,q=new Array,x=0,k=l.length>3?3:l.length,I=combinations(l,k);a=I.length;for(var s in I){var c=Math.floor(100*(Math.floor(s)+1)/a);postMessage({progress:{value:c,display:Math.floor(s)+1+" / "+a}});var P=new Array,j=0;for(var f in I[s]){var D=I[s][f].recipes.length>3?3:I[s][f].recipes.length,O=combinations(I[s][f].recipes,D);j+=I[s][f].max3sum,P.push(O)}if(!(j<=x)){var C=cartesianProduct(P);for(var f in C){var R=new Array,V=!0,L=0,T=C[f];for(var S in T){var u=T[S];for(var Q in u){if(!(R.indexOf(u[Q].data.recipeId)<0)){V=!1;break}R.push(u[Q].data.recipeId),L+=u[Q].totalScore}if(!V)break}V&&L>x&&(x=L,q=T,w=I[s])}}}l=new Array;for(var s in w){var y=new Object;y.chef=w[s].chef,y.recipes=q[s],l.push(y)}}var z=new Array;for(var s in l)for(var f in l[s].recipes){var B=new Object;B.chef=l[s].chef,B.recipe=l[s].recipes[f],z.push(B)}postMessage({menu:z})}function getMin3Sum(r){for(var i=0,e=r.length-3>0?r.length-3:0,t=e;t<r.length;t++)i+=r[t].totalScore;return i}function getMax3Sum(r){for(var i=0,e=r.length>3?3:r.length,t=0;t<e;t++)i+=r[t].totalScore;return i}function getMax3Limit(r){var i=0,e=0;for(var t in r)if(r[t].recipes.length>8&&(e++,3==e)){i=r[t].min3sum;break}return i}function getIngredientsAddition(r,i,e){var t=0;for(var n in r.ingredients)for(var a in i)if(r.ingredients[n].name==i[a].name){if(e){t+=Math.floor(i[a].addition);break}return Math.floor(i[a].addition)}return t}function filterRecipes(r,i){var e=new Array;for(var t in r){var n=!0;for(var a in r[t].ingredients){var o=!1;for(var l in i)if(r[t].ingredients[a].name==i[l].name){o=!0;break}if(!o){n=!1;break}}n&&e.push(r[t])}return e}function combinations(r,i){var e,t,n,a,o;if(i>r.length||i<=0)return[];if(i==r.length)return[r];if(1==i){for(n=[],e=0;e<r.length;e++)n.push([r[e]]);return n}for(n=[],e=0;e<r.length-i+1;e++)for(a=r.slice(e,e+1),o=combinations(r.slice(e+1),i-1),t=0;t<o.length;t++)n.push(a.concat(o[t]));return n}function cartesianProduct(r){var i,e,t,n,a,o=[];if(!r||0==r.length)return r;for(a=r.splice(0,1)[0],r=cartesianProduct(r),i=0,t=a.length;i<t;i++)if(r&&r.length)for(e=0,n=r.length;e<n;e++)o.push([a[i]].concat(r[e]));else o.push([a[i]]);return o}importScripts("food.min.js"),onmessage=function(r){calculateMenu(r.data)};