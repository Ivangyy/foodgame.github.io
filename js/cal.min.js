function calculateMenu(r){var i=r.ingredients,e=filterRecipes(r.recipes,r.ingredients),t=r.chefs,a=r.mode,n=t.length,o=0,l=new Array;for(var s in t){if("all"==a){var c=Math.floor(100*(Math.floor(s)+1)/n);c>o&&(o=c,postMessage({progress:{value:c,display:Math.floor(s)+1+" / "+n}}))}var f=new Array;for(var u in e){var d=getQualityInfo(e[u],t[s]);if(0!=d.qualityVal){var h=1;r.recipesMulitple&&(h=e[u].total);var v=getChefSkillAddition(e[u],t[s],i),p=0;if(r.hasRecipesAddition&&(p+=Math.floor(e[u].addition)),r.hasChefsAddition&&(p+=Math.floor(t[s].addition)),r.hasIngredientsAddition){var g=getIngredientsAddition(e[u],i,r.ingredientsAdditionCumulative);p+=g}var m=new Object;m.data=e[u],m.qualityVal=d.qualityVal,m.qualityDisp=d.qualityDisp,m.qualityAddition=d.qualityAddition,m.qualityAdditionDisp=d.qualityAddition||"",m.skillAddition=v,m.skillAdditionDisp=v||"",m.otherAddition=p,m.otherAdditionDisp=p||"",m.quantity=h,m.totalPrice=e[u].price*h,m.realTotalPrice=Math.ceil(e[u].price*(1+d.qualityAddition+v))*h,m.bonusScore=Math.ceil(e[u].price*p)*h,m.totalScore=m.realTotalPrice+m.bonusScore,f.push(m)}}f.sort(function(r,i){return i.totalScore-r.totalScore});var A=9;"all"==a&&(A=r.limit);var y=Math.min(A,f.length);f=f.slice(0,y);var M=new Object;M.chef=t[s],M.recipes=f,"optimal"==a&&(M.min3sum=getMin3Sum(f),M.max3sum=getMax3Sum(f)),l.push(M)}if("optimal"==a){if(l.length>3){l.sort(function(r,i){return i.min3sum-r.min3sum});var b=getMin3Limit(l.slice(0,3));for(var w in l)l[w].max3sum<=b&&l.splice(w,1)}var S=new Array,q=new Array,k=0,I=l.length>3?3:l.length,x=combinations(l,I);n=x.length;for(var s in x){var c=Math.floor(100*(Math.floor(s)+1)/n);postMessage({progress:{value:c,display:Math.floor(s)+1+" / "+n}});var P=new Array,O=0;for(var u in x[s]){var j=x[s][u].recipes.length>3?3:x[s][u].recipes.length,D=combinations(x[s][u].recipes,j);O+=x[s][u].max3sum,P.push(D)}if(!(O<=k)){var C=cartesianProduct(P);for(var u in C){var R=new Array,V=!0,L=0,T=C[u];for(var w in T){var f=T[w];for(var Q in f){if(!(R.indexOf(f[Q].data.recipeId)<0)){V=!1;break}R.push(f[Q].data.recipeId),L+=f[Q].totalScore}if(!V)break}V&&L>k&&(k=L,q=T,S=x[s])}}}l=new Array;for(var s in S){var M=new Object;M.chef=S[s].chef,M.recipes=q[s],l.push(M)}}var z=new Array;for(var s in l)for(var u in l[s].recipes){var B=new Object;B.chef=l[s].chef,B.recipe=l[s].recipes[u],z.push(B)}postMessage({menu:z})}function getMin3Sum(r){for(var i=0,e=r.length-3>0?r.length-3:0,t=e;t<r.length;t++)i+=r[t].totalScore;return i}function getMax3Sum(r){for(var i=0,e=r.length>3?3:r.length,t=0;t<e;t++)i+=r[t].totalScore;return i}function getMin3Limit(r){var i=0,e=new Array;for(var t in r){var a=combinations(r[t].recipes,3);e.push(a)}var n=cartesianProduct(e);for(var o in n){var l=new Array,s=!0,c=0,f=n[o];for(var u in f){var d=f[u];for(var h in d){if(!(l.indexOf(d[h].data.recipeId)<0)){s=!1;break}l.push(d[h].data.recipeId),c+=d[h].totalScore}if(!s)break}s&&c>i&&(i=c)}return i}function getIngredientsAddition(r,i,e){var t=0;for(var a in r.ingredients)for(var n in i)if(r.ingredients[a].name==i[n].name){if(e){t+=Math.floor(i[n].addition);break}return Math.floor(i[n].addition)}return t}function filterRecipes(r,i){var e=new Array;for(var t in r){var a=!0;for(var n in r[t].ingredients){var o=!1;for(var l in i)if(r[t].ingredients[n].name==i[l].name){o=!0;break}if(!o){a=!1;break}}a&&e.push(r[t])}return e}function combinations(r,i){var e,t,a,n,o;if(i>r.length||i<=0)return[];if(i==r.length)return[r];if(1==i){for(a=[],e=0;e<r.length;e++)a.push([r[e]]);return a}for(a=[],e=0;e<r.length-i+1;e++)for(n=r.slice(e,e+1),o=combinations(r.slice(e+1),i-1),t=0;t<o.length;t++)a.push(n.concat(o[t]));return a}function cartesianProduct(r){var i,e,t,a,n,o=[];if(!r||0==r.length)return r;for(n=r.splice(0,1)[0],r=cartesianProduct(r),i=0,t=n.length;i<t;i++)if(r&&r.length)for(e=0,a=r.length;e<a;e++)o.push([n[i]].concat(r[e]));else o.push([n[i]]);return o}importScripts("food.min.js"),onmessage=function(r){calculateMenu(r.data)};